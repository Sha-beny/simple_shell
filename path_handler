#include "shell.h"

/** 
 * path_cmd - check and execute command with path
 * @cmd: arreys of string
 * @input: parsed
 * return: 0 or 1
 */

int path_cmd(char **cmd)
{
	char *path;
	char *value;
	char *cmd_path;
	struct stat buf;

	path = _getenv("PATH");
	value = _strtok(path ":");
	while (value != NULL)
	{
		cmd_path = bulid(*cmd, value);
		if (stat(cmd_path, buf) == 0)
		{
			free(cmd_path);
			free(path);
			return (0);
		}
		free(cmd_path);
		value = _strtok(NULL, ":");
	}
	free(path);
	free(value);
	return (1);
}

/**
 * build_path - bulid all the command path
 * @dir: containing command
 * @value: executable command
 * return: cmd
 */

char build_path(char *dir, char *value)
{
	char *cmd;
	size_t len;

	len = _strlen(dir) + _strlen(command) + 2;
	cmd = malloc(sizeof(char) *len);
	if (cmd == NULL)
	{
		free(cmd);
		return (NULL);
	}

	memset(cmd, 0, len)

	cmd = _strcat(cmd, dir);
	cmd = _strcat(cmd, "/");
	cmd = _strcat(cmd, command);

	return (cmd);
}
